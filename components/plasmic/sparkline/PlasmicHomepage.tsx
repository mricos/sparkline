// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sa9cdtG5u1tnrsRL4NJAW9
// Component: BL6WUVff-Wcc
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navigation from "../../Navigation"; // plasmic-import: nO22joOvq4dJ/component
import Button from "../../Button"; // plasmic-import: ubZ4DzFcB6XW/component
import HeroSection2 from "../../HeroSection2"; // plasmic-import: wvexXQxiFndV/component
import Divider from "../../Divider"; // plasmic-import: 0tFV9O7Pw9U3/component
import ValuesSection3 from "../../ValuesSection3"; // plasmic-import: 8N9V0C3YR6A_/component
import Valueprop from "../../Valueprop"; // plasmic-import: TeGYHKYxFO1a/component
import ValuesSection2Dark from "../../ValuesSection2Dark"; // plasmic-import: OliTbamJX4w1/component
import ListItem from "../../ListItem"; // plasmic-import: Y6I84hNxrS72/component
import PricingSection3 from "../../PricingSection3"; // plasmic-import: ka15LM9W-d3r/component
import ShopBanners from "../../ShopBanners"; // plasmic-import: 2y-US2LMer-z/component
import Banner from "../../Banner"; // plasmic-import: pFcIZVJFywgO/component
import LogoCloudSection2 from "../../LogoCloudSection2"; // plasmic-import: qA5G_6re19j-/component
import TestimonialsSection1 from "../../TestimonialsSection1"; // plasmic-import: rjdV6bmTkzIk/component
import Testimonial from "../../Testimonial"; // plasmic-import: KmyQoT_FMet_/component
import CallToActionSection1 from "../../CallToActionSection1"; // plasmic-import: yXGncPhlYk28/component

import { useScreenVariants as useScreenVariantshYdh4LpA7GZz } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: hYdh4LpA7GZz/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_sparkline.module.css"; // plasmic-import: sa9cdtG5u1tnrsRL4NJAW9/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: BL6WUVff-Wcc/css

import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: R_QItIJ5-MOY/icon
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: 0YDKk3_SERyf/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: C_BcOzDDdFtc/icon
import Icon17Icon from "./icons/PlasmicIcon__Icon17"; // plasmic-import: KhDwTzDoj2bY/icon
import Icon16Icon from "./icons/PlasmicIcon__Icon16"; // plasmic-import: P2flqDX6hHZv/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  navigation?: p.Flex<typeof Navigation>;
  heroSection2?: p.Flex<typeof HeroSection2>;
  h1?: p.Flex<"h1">;
  plasmicNextjs?: p.Flex<"a"> & Partial<LinkProps>;
  valuesSection3?: p.Flex<typeof ValuesSection3>;
  h2?: p.Flex<"h2">;
  valuesSection2Dark?: p.Flex<typeof ValuesSection2Dark>;
  pricingSection3?: p.Flex<typeof PricingSection3>;
  shopBanners?: p.Flex<typeof ShopBanners>;
  logoCloudSection2?: p.Flex<typeof LogoCloudSection2>;
  testimonialsSection1?: p.Flex<typeof TestimonialsSection1>;
  callToActionSection1?: p.Flex<typeof CallToActionSection1>;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantshYdh4LpA7GZz()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          sty.root
        )}
      >
        <div className={classNames(projectcss.all, sty.freeBox__mprKd)} />

        <Navigation
          data-plasmic-name={"navigation"}
          data-plasmic-override={overrides.navigation}
          className={classNames("__wab_instance", sty.navigation)}
          hideCta={true}
          slot={
            <React.Fragment>
              <Button
                className={classNames("__wab_instance", sty.button__jiRek)}
                link={"#services" as const}
                navLink={true}
                slot={"Services"}
              />

              <Button
                className={classNames("__wab_instance", sty.button__g4RSs)}
                link={"#features" as const}
                navLink={true}
                slot={"Features"}
              />

              <Button
                className={classNames("__wab_instance", sty.button__wd16C)}
                link={"#pricing" as const}
                navLink={true}
                slot={"Pricing"}
              />

              <Button
                className={classNames("__wab_instance", sty.button__cTpSb)}
                link={"#testimonials" as const}
                navLink={true}
                slot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mn9
                    )}
                  >
                    {"About"}
                  </div>
                }
              />

              <Button
                className={classNames("__wab_instance", sty.button__nxDL)}
                navLink={true}
                slot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7R6Sp
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link___1TFrX
                          )}
                          component={Link}
                          href={"https://notes.nodeholder.com/about/" as const}
                          platform={"nextjs"}
                        >
                          {"Log in"}
                        </p.PlasmicLink>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                }
              />

              <Button
                className={classNames("__wab_instance", sty.button__sCeot)}
                darkGray={true}
                slot={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bUntF
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__vRrb4
                          )}
                          component={Link}
                          href={"https://notes.nodeholder.com/about/" as const}
                          platform={"nextjs"}
                        >
                          {"Sign up"}
                        </p.PlasmicLink>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                }
              />
            </React.Fragment>
          }
        >
          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__mJeet)}
            displayHeight={"auto" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"none" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"40px" as const}
            src={{
              src: "/plasmic/sparkline/images/image13.svg",
              fullWidth: 150,
              fullHeight: 150,
              aspectRatio: 1
            }}
          />
        </Navigation>

        <HeroSection2
          data-plasmic-name={"heroSection2"}
          data-plasmic-override={overrides.heroSection2}
          className={classNames("__wab_instance", sty.heroSection2)}
          foreground={
            <React.Fragment>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___3QVoc)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__d1QE2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dibQw
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h1
                          data-plasmic-name={"h1"}
                          data-plasmic-override={overrides.h1}
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1
                          )}
                        >
                          {"Nodeholder"}
                        </h1>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__anBv
                    )}
                  >
                    {"Adaptors between data."}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__pT0N)}
                >
                  <Button
                    className={classNames("__wab_instance", sty.button__a4EDh)}
                    darkGray={true}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yPhOb
                        )}
                      >
                        {"Start now ->"}
                      </div>
                    }
                  />

                  <Button
                    bgDifference={true}
                    className={classNames("__wab_instance", sty.button__xnKwP)}
                    darkGray={true}
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ipBao
                        )}
                      >
                        {"Learn more…"}
                      </div>
                    }
                  />
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__eB9H9)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__or5Zb)}>
                  <Divider
                    className={classNames("__wab_instance", sty.divider__rmECj)}
                  />
                </div>
              </p.Stack>
            </React.Fragment>
          }
        >
          {null}
        </HeroSection2>

        {true ? (
          <p.PlasmicLink
            data-plasmic-name={"plasmicNextjs"}
            data-plasmic-override={overrides.plasmicNextjs}
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.plasmicNextjs
            )}
            component={Link}
            href={"https://docs.plasmic.app/learn/nextjs-quickstart/" as const}
            platform={"nextjs"}
          >
            {"https://docs.plasmic.app/learn/nextjs-quickstart/"}
          </p.PlasmicLink>
        ) : null}

        <div className={classNames(projectcss.all, sty.freeBox__yNoJ4)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___9XEq
            )}
          >
            {
              "A cras sagittis odio vestibulum pulvinar a eget hendrerit id vestibulum a leo sociosqu dictumst dictumst natoque magnis parturient."
            }
          </div>
        </div>

        <div
          className={classNames(projectcss.all, sty.freeBox__mwDWh)}
          id={"services" as const}
        >
          {true ? (
            <ValuesSection3
              data-plasmic-name={"valuesSection3"}
              data-plasmic-override={overrides.valuesSection3}
              className={classNames("__wab_instance", sty.valuesSection3)}
              foreground={
                <React.Fragment>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lpAea)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__xbwX6)}
                    >
                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__gEdgy
                        )}
                        flat={true}
                        slot={
                          "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__criaV
                            )}
                            role={"img"}
                          />
                        }
                      >
                        {"Powerful"}
                      </Valueprop>

                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__kzSat
                        )}
                        flat={true}
                        slot={
                          "Consequat scelerisque a eros taciti nisl a sodales."
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__azsMz
                            )}
                            role={"img"}
                          />
                        }
                      >
                        {"Faster"}
                      </Valueprop>

                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop___93Vv
                        )}
                        flat={true}
                        slot={"At ut condimentum amet adipiscing ac diam a."}
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lubdz
                            )}
                            role={"img"}
                          />
                        }
                      >
                        {"Best and brightest"}
                      </Valueprop>

                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop___98Eb
                        )}
                        flat={true}
                        slot={
                          "Donec purus nec vestibulum volutpat vivamus vulputate suspendisse."
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__y6LXt
                            )}
                            role={"img"}
                          />
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6CEhJ
                          )}
                        >
                          {"Dynamic range"}
                        </div>
                      </Valueprop>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__acpkU)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__blDwe)}
                    >
                      <h2
                        data-plasmic-name={"h2"}
                        data-plasmic-override={overrides.h2}
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2
                        )}
                      >
                        {"Proposing values"}
                      </h2>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r657O
                      )}
                    >
                      {
                        "Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames."
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yBbQu)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__hHiij)}
                    >
                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__lh5Jz
                        )}
                        flat={true}
                        slot={
                          "Commodo pretium himenaeos nisi potenti ad in ante."
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__uEnrP
                            )}
                            role={"img"}
                          />
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iDd1N
                          )}
                        >
                          {"Portable"}
                        </div>
                      </Valueprop>

                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__ddyRt
                        )}
                        flat={true}
                        slot={"Magna ullamcorper ut arcu nisi a per facilisis."}
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__usg1P
                            )}
                            role={"img"}
                          />
                        }
                      >
                        {"Production-ready"}
                      </Valueprop>

                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop___2HqKc
                        )}
                        flat={true}
                        slot={
                          "Ac lobortis praesent sagittis dictumst fermentum vestibulum nunc."
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ovEU
                            )}
                            role={"img"}
                          />
                        }
                      >
                        {"Magical"}
                      </Valueprop>

                      <Valueprop
                        className={classNames(
                          "__wab_instance",
                          sty.valueprop__oEx5I
                        )}
                        flat={true}
                        slot={
                          "A parturient mi suspendisse nisl inceptos nullam a."
                        }
                        slot2={
                          <Icon14Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__mxKI
                            )}
                            role={"img"}
                          />
                        }
                      >
                        {"Accessible"}
                      </Valueprop>
                    </p.Stack>
                  </p.Stack>
                </React.Fragment>
              }
            />
          ) : null}
        </div>

        <div
          className={classNames(projectcss.all, sty.freeBox__g4Gft)}
          id={"features" as const}
        >
          <ValuesSection2Dark
            data-plasmic-name={"valuesSection2Dark"}
            data-plasmic-override={overrides.valuesSection2Dark}
          />
        </div>

        <div
          className={classNames(projectcss.all, sty.freeBox___5Nil9)}
          id={"pricing" as const}
        >
          <PricingSection3
            data-plasmic-name={"pricingSection3"}
            data-plasmic-override={overrides.pricingSection3}
            foreground={
              <React.Fragment>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__zKwm)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__s14Ie)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zchHt
                      )}
                    >
                      {"Pricing plans"}
                    </div>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cx3Ev
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iRfKk)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__oyXhB)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__xfRfN)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gbPmg
                        )}
                      >
                        {"Starter"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jjp8G
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qYvQ
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___2R1FA
                            )}
                          >
                            {"$"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__unPi8
                            )}
                          >
                            {"8"}
                          </div>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__toeTr
                          )}
                        >
                          {"/month"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <Divider
                      className={classNames(
                        "__wab_instance",
                        sty.divider__mrUG
                      )}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__bLXA)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__kgvKf
                        )}
                      >
                        <Valueprop
                          className={classNames(
                            "__wab_instance",
                            sty.valueprop___3XJio
                          )}
                          flatIcon={true}
                          justDescription={true}
                          slot={
                            "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                          }
                          slot2={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__q0DLh
                              )}
                              role={"img"}
                            />
                          }
                          slot22={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__wItep
                              )}
                              role={"img"}
                            />
                          }
                        />

                        <Valueprop
                          className={classNames(
                            "__wab_instance",
                            sty.valueprop__s3RQ
                          )}
                          flatIcon={true}
                          justDescription={true}
                          slot={"Mus consequat a justo"}
                          slot2={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__eQl7O
                              )}
                              role={"img"}
                            />
                          }
                          slot22={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__nnDiq
                              )}
                              role={"img"}
                            />
                          }
                        />
                      </p.Stack>

                      <Button
                        colors={"white" as const}
                        extraSmallShadow={true}
                        slot={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hEdiD
                            )}
                          >
                            {"Buy starter"}
                          </div>
                        }
                      />
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__iqfUr)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__yDWjm)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mp5D1
                        )}
                      >
                        {"Pro"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__sM0Os
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vmMm5
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qyt78
                            )}
                          >
                            {"$"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__i7D01
                            )}
                          >
                            {"16"}
                          </div>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jtt2L
                          )}
                        >
                          {"/month"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <Divider
                      className={classNames(
                        "__wab_instance",
                        sty.divider___0FPvI
                      )}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__sQnpk)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__m5Efs
                        )}
                      >
                        <Valueprop
                          className={classNames(
                            "__wab_instance",
                            sty.valueprop__qQlPc
                          )}
                          flatIcon={true}
                          justDescription={true}
                          slot={
                            "Ligula primis mollis sem dignissim semper lectus parturient"
                          }
                          slot2={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vtxwx
                              )}
                              role={"img"}
                            />
                          }
                          slot22={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sPhKc
                              )}
                              role={"img"}
                            />
                          }
                        />

                        <Valueprop
                          className={classNames(
                            "__wab_instance",
                            sty.valueprop__elLb4
                          )}
                          flatIcon={true}
                          justDescription={true}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jjrTb
                              )}
                            >
                              {"A curabitur dignissim pharetra porta suscipit"}
                            </div>
                          }
                          slot2={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gM5O
                              )}
                              role={"img"}
                            />
                          }
                          slot22={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__d4Mdd
                              )}
                              role={"img"}
                            />
                          }
                        />

                        <Valueprop
                          className={classNames(
                            "__wab_instance",
                            sty.valueprop__boCpc
                          )}
                          flatIcon={true}
                          justDescription={true}
                          slot={
                            "Condimentum diam a et sapien praesent potenti torquent a eros"
                          }
                          slot2={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__xwZmg
                              )}
                              role={"img"}
                            />
                          }
                          slot22={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__f6EGc
                              )}
                              role={"img"}
                            />
                          }
                        />

                        <Valueprop
                          className={classNames(
                            "__wab_instance",
                            sty.valueprop__fywIp
                          )}
                          flatIcon={true}
                          justDescription={true}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__agf8Y
                              )}
                            >
                              {"Conubia in hac eu elementum sodales"}
                            </div>
                          }
                          slot2={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bFnxg
                              )}
                              role={"img"}
                            />
                          }
                          slot22={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__atRz1
                              )}
                              role={"img"}
                            />
                          }
                        />
                      </p.Stack>

                      <Button
                        colors={"green" as const}
                        extraSmallShadow={true}
                        slot={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nhWr
                            )}
                          >
                            {"Buy pro"}
                          </div>
                        }
                      />
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__mlOWg)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dsjSc)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__b9NX
                        )}
                      >
                        {"Team"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___9FHeq
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vPx5C
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lxeBl
                            )}
                          >
                            {"$"}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__p6UE5
                            )}
                          >
                            {"10"}
                          </div>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__at9Bo
                          )}
                        >
                          {"/member"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <Divider
                      className={classNames(
                        "__wab_instance",
                        sty.divider__rDlC6
                      )}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__mwu3Y)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__w6EWb
                        )}
                      >
                        <Valueprop
                          className={classNames(
                            "__wab_instance",
                            sty.valueprop__zdH83
                          )}
                          flatIcon={true}
                          justDescription={true}
                          slot={"Ad nam curae a potenti platea"}
                          slot2={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__pSzzf
                              )}
                              role={"img"}
                            />
                          }
                          slot22={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___6RkHt
                              )}
                              role={"img"}
                            />
                          }
                        />

                        <Valueprop
                          className={classNames(
                            "__wab_instance",
                            sty.valueprop__qDXxS
                          )}
                          flatIcon={true}
                          justDescription={true}
                          slot={
                            "A adipiscing scelerisque pretium consectetur sem"
                          }
                          slot2={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__il28H
                              )}
                              role={"img"}
                            />
                          }
                          slot22={
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vmyQb
                              )}
                              role={"img"}
                            />
                          }
                        />
                      </p.Stack>

                      <Button
                        colors={"white" as const}
                        extraSmallShadow={true}
                        slot={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__txtYh
                            )}
                          >
                            {"Buy team"}
                          </div>
                        }
                      />
                    </p.Stack>
                  </div>
                </p.Stack>
              </React.Fragment>
            }
          />
        </div>

        <ShopBanners
          data-plasmic-name={"shopBanners"}
          data-plasmic-override={overrides.shopBanners}
          className={classNames("__wab_instance", sty.shopBanners)}
        >
          <Banner
            className={classNames("__wab_instance", sty.banner___3Lagp)}
            left={
              <React.Fragment>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__leept
                  )}
                >
                  {"Sunglasses Collection"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vhiNg
                  )}
                >
                  {"Get 25% off on selected items"}
                </div>

                <Button
                  slot={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0M4Cd
                      )}
                    >
                      {"Go to collection ->"}
                    </div>
                  }
                />
              </React.Fragment>
            }
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__o5RXf)}
          >
            <Banner
              className={classNames("__wab_instance", sty.banner__tbCSd)}
              left={
                <React.Fragment>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wNr5B
                    )}
                  >
                    {"Sunglasses Collection"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uQcdK
                    )}
                  >
                    {"Get 25% off on selected items"}
                  </div>

                  <Button
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ti8Is
                        )}
                      >
                        {"Go to collection ->"}
                      </div>
                    }
                  />
                </React.Fragment>
              }
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___2RpI)}
                displayHeight={"100%" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"100%" as const}
                src={
                  "https://images.unsplash.com/photo-1463100099107-aa0980c362e6?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2850&q=80" as const
                }
              />
            </Banner>

            <Banner
              className={classNames("__wab_instance", sty.banner__azsGn)}
              left={
                <React.Fragment>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uy84
                    )}
                  >
                    {"Sunglasses Collection"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kv6Rf
                    )}
                  >
                    {"Get 25% off on selected items"}
                  </div>

                  <Button
                    slot={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lf8QY
                        )}
                      >
                        {"Go to collection ->"}
                      </div>
                    }
                  />
                </React.Fragment>
              }
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__gms7I)}
                displayHeight={"100%" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"none" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"100%" as const}
                src={
                  "https://images.unsplash.com/photo-1554568218-0f1715e72254?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1834&q=80" as const
                }
              />
            </Banner>
          </p.Stack>
        </ShopBanners>

        <LogoCloudSection2
          data-plasmic-name={"logoCloudSection2"}
          data-plasmic-override={overrides.logoCloudSection2}
          className={classNames("__wab_instance", sty.logoCloudSection2)}
        />

        <div
          className={classNames(projectcss.all, sty.freeBox__yUSnb)}
          id={"testimonials" as const}
        >
          <TestimonialsSection1
            data-plasmic-name={"testimonialsSection1"}
            data-plasmic-override={overrides.testimonialsSection1}
          >
            <Testimonial
              className={classNames("__wab_instance", sty.testimonial__jenao)}
              slot={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__bxxBs)}
                  displayHeight={"64px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"64px" as const}
                  src={
                    "https://www.caa.com/sites/default/files/styles/headshot_500x500/public/speaker-headshots/Morgan_CAAspeakers_Heashot_Web.jpg?itok=WCOhQ1Hj" as const
                  }
                />
              }
            />

            <Testimonial
              className={classNames("__wab_instance", sty.testimonial__aG4R)}
              slot={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ly59H)}
                  displayHeight={"64px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"64px" as const}
                  src={
                    "https://tv-fanatic-res.cloudinary.com/iu/s--eXCbHIe1--/t_teaser_wide/cs_srgb,f_auto,fl_strip_profile.lossy,q_auto:420/v1371156342/elaine-benes-picture.png" as const
                  }
                />
              }
              slot2={"Elaine Benes"}
              slot3={"Editor, Pendant Publishing"}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__h2Mt9
                )}
              >
                {'"Vestibulum lacinia varius habitant dis aenean.'}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mOMly
                )}
              >
                {
                  'A parturient non ultricies a parturient leo a nascetur at consectetur turpis praesent mus ornare nulla posuere vel parturient."'
                }
              </div>
            </Testimonial>

            <Testimonial
              className={classNames("__wab_instance", sty.testimonial__egWmv)}
              slot={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__gOwqE)}
                  displayHeight={"64px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"64px" as const}
                  src={
                    "https://i.pinimg.com/originals/87/d7/7d/87d77d68368fe5361d535b51cc5af09a.jpg" as const
                  }
                />
              }
              slot2={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2ACn
                  )}
                >
                  {"Woody Boyd"}
                </div>
              }
              slot3={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dfvT
                  )}
                >
                  {"Assistant Bartender, Cheers"}
                </div>
              }
            >
              {
                '"A ullamcorper etiam gravida a non maecenas ac parturient lectus vestibulum nam."'
              }
            </Testimonial>

            <Testimonial
              className={classNames("__wab_instance", sty.testimonial__sdDpd)}
              slot={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__gXgTc)}
                  displayHeight={"64px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"64px" as const}
                  src={
                    "https://a1cf74336522e87f135f-2f21ace9a6cf0052456644b80fa06d4f.ssl.cf2.rackcdn.com/images/characters_opt/p-fresh-randall-park.jpg" as const
                  }
                />
              }
              slot2={"Louis Huang"}
              slot3={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pwxQk
                  )}
                >
                  {"Restaurant Owner, Cattleman's Ranch"}
                </div>
              }
            >
              {
                '"Purus dis a primis rhoncus blandit velit suspendisse porta at ullamcorper suscipit a scelerisque sed pharetra facilisi vitae."'
              }
            </Testimonial>
          </TestimonialsSection1>
        </div>

        <CallToActionSection1
          data-plasmic-name={"callToActionSection1"}
          data-plasmic-override={overrides.callToActionSection1}
          className={classNames("__wab_instance", sty.callToActionSection1)}
        />

        {true ? (
          <p.PlasmicLink
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__rl3Xa
            )}
            component={Link}
            href={"https://www.plasmic.app/" as const}
            platform={"nextjs"}
          >
            {"Some link text"}
          </p.PlasmicLink>
        ) : null}

        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__uqtDd
          )}
        >
          {"holloway.lerena@gmail.com"}
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navigation",
    "heroSection2",
    "h1",
    "plasmicNextjs",
    "valuesSection3",
    "h2",
    "valuesSection2Dark",
    "pricingSection3",
    "shopBanners",
    "logoCloudSection2",
    "testimonialsSection1",
    "callToActionSection1"
  ],
  navigation: ["navigation"],
  heroSection2: ["heroSection2", "h1"],
  h1: ["h1"],
  plasmicNextjs: ["plasmicNextjs"],
  valuesSection3: ["valuesSection3", "h2"],
  h2: ["h2"],
  valuesSection2Dark: ["valuesSection2Dark"],
  pricingSection3: ["pricingSection3"],
  shopBanners: ["shopBanners"],
  logoCloudSection2: ["logoCloudSection2"],
  testimonialsSection1: ["testimonialsSection1"],
  callToActionSection1: ["callToActionSection1"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navigation: typeof Navigation;
  heroSection2: typeof HeroSection2;
  h1: "h1";
  plasmicNextjs: "a";
  valuesSection3: typeof ValuesSection3;
  h2: "h2";
  valuesSection2Dark: typeof ValuesSection2Dark;
  pricingSection3: typeof PricingSection3;
  shopBanners: typeof ShopBanners;
  logoCloudSection2: typeof LogoCloudSection2;
  testimonialsSection1: typeof TestimonialsSection1;
  callToActionSection1: typeof CallToActionSection1;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navigation: makeNodeComponent("navigation"),
    heroSection2: makeNodeComponent("heroSection2"),
    h1: makeNodeComponent("h1"),
    plasmicNextjs: makeNodeComponent("plasmicNextjs"),
    valuesSection3: makeNodeComponent("valuesSection3"),
    h2: makeNodeComponent("h2"),
    valuesSection2Dark: makeNodeComponent("valuesSection2Dark"),
    pricingSection3: makeNodeComponent("pricingSection3"),
    shopBanners: makeNodeComponent("shopBanners"),
    logoCloudSection2: makeNodeComponent("logoCloudSection2"),
    testimonialsSection1: makeNodeComponent("testimonialsSection1"),
    callToActionSection1: makeNodeComponent("callToActionSection1"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
